/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import ai.multilayerperceptron.MultiLayerPerceptron;
import imageprocessing.FeatureExtraction;
import imageprocessing.PreProcessing;
import imageprocessing.Segmentation;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Chien Nguyen
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel = new javax.swing.JPanel();
        loadImageButton = new javax.swing.JButton();
        recogniseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();
        loadNetworkButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 429, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        loadImageButton.setText("Load Image");
        loadImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                loadImageButtonMousePressed(evt);
            }
        });

        recogniseButton.setText("Nhan dang");
        recogniseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                recogniseButtonMousePressed(evt);
            }
        });

        resultTextArea.setColumns(20);
        resultTextArea.setRows(5);
        jScrollPane1.setViewportView(resultTextArea);

        loadNetworkButton.setText("Load Network");
        loadNetworkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                loadNetworkButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadImageButton)
                        .addGap(18, 18, 18)
                        .addComponent(recogniseButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(loadNetworkButton))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(loadImageButton)
                            .addComponent(recogniseButton)
                            .addComponent(loadNetworkButton))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loadImageButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadImageButtonMousePressed
        File file = showOpenDialog();
        if (file != null) {
            try {
                image = ImageIO.read(file);
                Graphics g = imagePanel.getGraphics();
                int width = imagePanel.getWidth();
                int height = image.getHeight();
                g.drawImage(image, 0, 0, width, height, null);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Không load được ảnh!\n"+
                    e.toString());
            }
        }
    }//GEN-LAST:event_loadImageButtonMousePressed

    private void recogniseButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recogniseButtonMousePressed
        StringBuilder str = new StringBuilder();
        BufferedImage binaryImage = PreProcessing.convertToBlackAndWhiteImage(image);
        for (BufferedImage line : Segmentation.getLines(binaryImage)) {
            for (BufferedImage word : Segmentation.getWords(line)) {
                for (BufferedImage _char : Segmentation.getChars(word)) {
                    char x = recogniseChar(_char);
                    str.append(x);
                }
                str.append(" ");
            }
            str.append("\n");
        }
        System.out.println(str.toString());
        resultTextArea.setText(str.toString());
    }//GEN-LAST:event_recogniseButtonMousePressed

    private void loadNetworkButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadNetworkButtonMousePressed
        File file = showOpenDialog();
        if (file != null) {
            try {
                net = MultiLayerPerceptron.loadNetwork(file.getPath());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Có lỗi xảy ra!\n"
                    + e.toString());
            }
        }
    }//GEN-LAST:event_loadNetworkButtonMousePressed

    private char recogniseChar(BufferedImage img) {
        double input[] = FeatureExtraction.getFeatureByResizingSquare(img, 30);
        double output[] = net.execute(input);
        int max = 0;
        for (int i = 0; i < output.length; i++) {
            if (output[i] > output[max]) {
                max = i;
            }
        }
        if (output[max] < 0.10) {
            System.out.println((max+1) + " " + output[max]);
            return '_';
        }
        max++;
        char x;
        if (max <= 10) {
            x = '0';
            x += max - 1;
        } else if (max <= 36) {
            x = 'A';
            x += max - 11;
        } else {
            x = 'a';
            x += max - 37;
        }
        System.out.println(x + " " + max + " " + output[max - 1]);
        return x;
    }

    private File showOpenDialog() {
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Import From File");
        int result = fc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            return fc.getSelectedFile();
        } else {
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    private MultiLayerPerceptron net;
    private BufferedImage image;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel imagePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadImageButton;
    private javax.swing.JButton loadNetworkButton;
    private javax.swing.JButton recogniseButton;
    private javax.swing.JTextArea resultTextArea;
    // End of variables declaration//GEN-END:variables
}
